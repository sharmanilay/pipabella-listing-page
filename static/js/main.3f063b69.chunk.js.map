{"version":3,"sources":["media/download.svg","header.js","content/item-block.js","content/filters.js","content/layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","index_es","className","position","color","container","justify","item","xs","href","src","logo","alt","icons_index_es","Component","ItemBlock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onImgHover","setState","onHover","onImgHoverOff","state","_this$props","img1","img2","price","name","srcImg","onMouseEnter","onMouseLeave","concat","Filters","getListString","array","types","reduce","value","index","console","log","createQueryParam","_this$state","productSubtype","productType","productOccasion","appendQueryParam","queryParam","length","handleChange","filter","e","_this$state2","target","checked","push","getProductTypeFilters","filters","product_type","map","key","control","id","enabled","onChange","label","getProductSubtypeFilters","product_subtype","getProductOccasionFilters","product_occasion","getPriceFilters","_this$props$filters","component","Layout","fetchData","baseUrl","endUrl","queryParams","sortValue","sorting","queryUrl","fetch","then","response","json","rawData","isLoading","showData","results","data","item_block","entity_id","image1","image2","final_price","handleSortChange","queryPrefix","newQuery","getSortOptions","sortOptions","finalSort","getFilters","facets","content_filters","spacing","App","header","layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f063b69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.b054d328.svg\";","import React,{Component} from 'react';\r\nimport logo from './media/download.svg';\r\nimport {AppBar, Toolbar, IconButton,Grid, Paper} from '@material-ui/core';\r\nimport { AccountCircle, Mail, Notifications, More } from '@material-ui/icons';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n  render(){\r\n    return (\r\n        <AppBar className=\"header mb10\" position=\"sticky\" color=\"default\">\r\n          <Toolbar>\r\n            <Grid container justify=\"center\">\r\n              <Grid item xs={3}>\r\n                <a className='nav-link' href=\"https://www.pipabella.com/spin-the-wheel-2019\">Spin the wheel</a>\r\n              </Grid> \r\n              <Grid item xs={6}>\r\n                <a className=\"\" href=\"https://www.pipabella.com/\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></a>\r\n              </Grid> \r\n              <Grid item xs={3}>\r\n                <Paper>\r\n                    <div className='float-right'>\r\n                      <IconButton color=\"inherit\">\r\n                          <Mail />\r\n                      </IconButton>\r\n                      <IconButton color=\"inherit\">\r\n                          <Notifications />\r\n                      </IconButton>\r\n                      <IconButton  color=\"inherit\">\r\n                        <AccountCircle />\r\n                      </IconButton>\r\n                      <IconButton color=\"inherit\">\r\n                        <More />\r\n                      </IconButton>\r\n                    </div>\r\n                </Paper>\r\n              </Grid> \r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\nimport {Grid,Paper} from '@material-ui/core';\r\n\r\nclass ItemBlock extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            onHover: false,\r\n        }\r\n    }\r\n    onImgHover = () => {\r\n        this.setState({\r\n            onHover: true,\r\n        })\r\n    }\r\n    onImgHoverOff = () => {\r\n        this.setState({\r\n            onHover: false,\r\n        })\r\n    }\r\n    render(){\r\n        const {onHover} = this.state;\r\n        const {img1,img2,price,name} = this.props;\r\n        const srcImg = onHover ? img2 : img1;\r\n        return (\r\n            <Grid  item xs={4}>\r\n                <Paper className='item-block'>\r\n                    <div className='item-container'>\r\n                        <img \r\n                            className='item-img'\r\n                            onMouseEnter={this.onImgHover}\r\n                            onMouseLeave={this.onImgHoverOff}\r\n                            src={srcImg} \r\n                            alt={name} \r\n                        />\r\n                        <div className=\"pb20\">\r\n                            <span className='item-price mb10'>₹{price}</span> \r\n                            <span><a  className='item-link' href={`#${name}`}>{name}</a></span>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemBlock;","import React,{Component} from 'react';\r\nimport {Grid,FormControl,FormGroup, FormControlLabel,Checkbox, FormLabel} from '@material-ui/core';\r\n\r\nclass Filters extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            productType: [],\r\n            productSubtype: [],\r\n            price: [],\r\n            productOccasion: [],\r\n        }\r\n    }\r\n    getListString = (array) => {\r\n        const types = array.reduce((item,value,index) => {\r\n            return item+','+value;\r\n       })\r\n       console.log(types)\r\n       return types;\r\n    }\r\n    createQueryParam = () => {\r\n        const {price,productSubtype,productType,productOccasion} = this.state;\r\n        const {appendQueryParam} = this.props;\r\n        let queryParam='';\r\n        if(productType.length>0){\r\n            queryParam+='product_type:';\r\n            queryParam+=this.getListString(productType);\r\n        }\r\n        if(productSubtype.length>0){\r\n            queryParam+='product_subtype:';\r\n            queryParam+=this.getListString(productSubtype);\r\n        }\r\n        if(productOccasion.length>0){\r\n            queryParam+='product_occasion:';\r\n            queryParam+=this.getListString(productOccasion);\r\n        }\r\n        if(price.length>0){\r\n            queryParam+='price:';\r\n            queryParam+=this.getListString(price);\r\n        }\r\n        appendQueryParam(queryParam); \r\n    }\r\n    handleChange = filter => (e) => {\r\n        const {productType,productSubtype,price,productOccasion} = this.state;\r\n        switch(filter) {\r\n            case 'product_type:': \r\n                if(e.target.checked){\r\n                    productType.push(e.target.value);\r\n                    this.setState({\r\n                        productType\r\n                    },() =>  this.createQueryParam())\r\n                }else{\r\n                    this.setState({\r\n                        productType: productType.filter(item => item!== e.target.value)\r\n                    },() =>  this.createQueryParam())\r\n                }\r\n                break;\r\n            case 'product_subtype:':\r\n                if(e.target.checked){\r\n                    productSubtype.push(e.target.value);\r\n                        this.setState({\r\n                            productSubtype\r\n                        },() =>  this.createQueryParam())\r\n                }else{\r\n                    this.setState({\r\n                        productSubtype: productSubtype.filter(item => item!== e.target.value)\r\n                    },() =>  this.createQueryParam())\r\n                }\r\n                break;\r\n            case 'product_occasion:':\r\n                if(e.target.checked){\r\n                    productOccasion.push(e.target.value);\r\n                    this.setState({\r\n                        productOccasion\r\n                    },() =>  this.createQueryParam())\r\n                }else{\r\n                    this.setState({\r\n                        productOccasion: productOccasion.filter(item => item!== e.target.value)\r\n                    },() =>  this.createQueryParam())\r\n                }\r\n                break;\r\n            case 'price:':\r\n                if(e.target.checked){\r\n                    price.push(e.target.value);\r\n                    this.setState({\r\n                        productType\r\n                    },() =>  this.createQueryParam())\r\n                }else{\r\n                    this.setState({\r\n                        price: price.filter(item => item!== e.target.value)\r\n                    },() =>  this.createQueryParam())\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    getProductTypeFilters = () => {\r\n        const {filters} = this.props;\r\n        const {product_type} = filters;\r\n        const productCheckBoxes = product_type.map(item => {\r\n            return <FormControlLabel\r\n                        key={item.name}\r\n                        control={\r\n                        <Checkbox id={item.name} checked={item.enabled} onChange={this.handleChange('product_type:')} value={item.name} />\r\n                        }\r\n                        label={item.name}\r\n                    />\r\n        })\r\n        return productCheckBoxes;\r\n    }\r\n    getProductSubtypeFilters = () => {\r\n        const {filters} = this.props;\r\n        const {product_subtype} = filters;\r\n        const productCheckBoxes = product_subtype.map(item => {\r\n            return <FormControlLabel\r\n                        key={item.name}\r\n                        control={\r\n                        <Checkbox checked={item.enabled} onChange={this.handleChange('product_subtype:')} value={item.name} />\r\n                        }\r\n                        label={item.name}\r\n                    />\r\n        })\r\n        return productCheckBoxes;\r\n    }\r\n    getProductOccasionFilters = () => {\r\n        const {filters} = this.props;\r\n        const {product_occasion} = filters;\r\n        const productCheckBoxes = product_occasion.map(item => {\r\n            return <FormControlLabel\r\n                        key={item.name}\r\n                        control={\r\n                        <Checkbox checked={item.enabled} onChange={this.handleChange('product_occasion:')} value={item.name} />\r\n                        }\r\n                        label={item.name}\r\n                    />\r\n        })\r\n        return productCheckBoxes;\r\n    }\r\n    getPriceFilters = () => {\r\n        const {filters} = this.props;\r\n        const {price} = filters;\r\n        const productCheckBoxes = price.map(item => {\r\n            return <FormControlLabel\r\n                        key={item.name}\r\n                        control={\r\n                        <Checkbox checked={item.enabled} onChange={this.handleChange('price:')} value={item.name} />\r\n                        }\r\n                        label={item.name}\r\n                    />\r\n        })\r\n        return productCheckBoxes;\r\n    }\r\n    render(){\r\n        const {price,product_subtype,product_type,product_occasion} = this.props.filters;\r\n        return (\r\n            <Grid  item xs={12}>\r\n                <FormControl className='sort-form'>\r\n                        {product_type \r\n                        ?   <FormGroup>\r\n                                <FormLabel component=\"legend\">Product Type</FormLabel>\r\n                                {this.getProductTypeFilters()}\r\n                            </FormGroup>  \r\n                        : null}\r\n                        {product_subtype \r\n                        ?  <FormGroup>\r\n                                <FormLabel component=\"legend\">Product SubType</FormLabel>\r\n                                {this.getProductSubtypeFilters()}\r\n                            </FormGroup>  \r\n                        : null}\r\n                        {product_occasion \r\n                        ?  <FormGroup>\r\n                                <FormLabel component=\"legend\">Product Ocassion</FormLabel>\r\n                                {this.getProductOccasionFilters()}\r\n                            </FormGroup>  \r\n                        : null}\r\n                        {price\r\n                        ?  <FormGroup>\r\n                                <FormLabel component=\"legend\">Price</FormLabel>\r\n                                {this.getPriceFilters()}\r\n                            </FormGroup>  \r\n                        : null\r\n                        }\r\n                </FormControl>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;","import React,{Component} from 'react';\r\nimport {Grid, Paper,Select,MenuItem, FormControl} from '@material-ui/core';\r\nimport ItemBlock from './item-block';\r\nimport Filters from './filters';\r\n\r\nclass Layout extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rawData: {},\r\n            baseUrl: 'https://optimus.pipabella.com/v1/search/67?page=1',\r\n            endUrl: '&rows=60',\r\n            isLoading: true,\r\n            sortValue: 'New Arrivals',\r\n            queryPrefix: '&f=',\r\n            queryParams: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData = () => {\r\n        const {baseUrl,endUrl,queryParams,sortValue} = this.state;\r\n        const sorting = `&sort_type=${sortValue}`;\r\n        const  queryUrl = `${baseUrl}${sorting}${queryParams}${endUrl}`;\r\n        fetch(queryUrl)\r\n        .then(response => response.json())\r\n        .then(rawData => this.setState({ rawData,isLoading: false }));\r\n    }\r\n\r\n    showData = () => {\r\n      const {rawData} = this.state;\r\n      const { data } = rawData.results;\r\n      const itemsToShow = data.map((item) => {\r\n        return <ItemBlock \r\n                  key={item.entity_id}\r\n                  img1={item.image1}\r\n                  img2={item.image2}\r\n                  name={item.name}\r\n                  price={item.final_price}\r\n                />\r\n      })\r\n      return itemsToShow;\r\n    }\r\n\r\n    handleSortChange = (e) => {\r\n      this.setState({\r\n        sortValue: e.target.value,\r\n      },() => {\r\n        this.fetchData()\r\n      });\r\n    }\r\n\r\n    appendQueryParam = (queryParam) => {\r\n      const {queryPrefix} = this.state;\r\n      const newQuery = `${queryPrefix}${queryParam}`;\r\n      console.log(newQuery);\r\n      this.setState({\r\n        queryParams: newQuery,\r\n      },() => {\r\n        this.fetchData()\r\n      })\r\n    }\r\n\r\n\r\n    getSortOptions = () => {\r\n      const {rawData, sortValue} = this.state;\r\n      const {finalSort} = rawData;\r\n      const sortOptions = finalSort.map((item) => {\r\n        return <MenuItem value={item.name} key={item.name}> {item.name}</MenuItem>\r\n      })\r\n      return (\r\n        <form>\r\n          <span className=\"float-left sort-text\">Sort By:</span>\r\n          <FormControl className='sort-form'>\r\n            <Select onChange={this.handleSortChange} value={sortValue}>\r\n              {sortOptions}\r\n            </Select>\r\n          </FormControl>\r\n        </form>\r\n      )\r\n    }\r\n    \r\n    getFilters = () => {\r\n      const {rawData} = this.state;\r\n      const filters = rawData.facets[0];\r\n      return <Filters filters={filters} appendQueryParam={this.appendQueryParam} />\r\n    }\r\n\r\n    render(){\r\n      const {isLoading} = this.state;\r\n      return (\r\n        <Grid container justify=\"center\">\r\n          <Grid container className='mb10 item-header' item xs={10} spacing={8}>\r\n            <Grid item xs={2}>\r\n              <Paper>Filters</Paper>\r\n            </Grid> \r\n            <Grid item xs={7}>\r\n              <Paper>What's New</Paper>\r\n            </Grid> \r\n            <Grid item xs={3}>\r\n              <Paper>\r\n                {!isLoading ?this.getSortOptions() :null}\r\n              </Paper>\r\n            </Grid> \r\n          </Grid>\r\n          <Grid container item xs={10} spacing={8}>\r\n            <Grid item xs={2}>\r\n              {!isLoading ? this.getFilters(): null}\r\n            </Grid>\r\n            <Grid item xs={10} >\r\n              <Grid container spacing={8}>\r\n                {!isLoading ? this.showData(): null}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport Header from  './header';\nimport Layout from './content/layout';\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n         <Header />\n         <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}